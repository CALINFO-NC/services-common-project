Description

 Lors de l'appel d'une URL d'un service, le common tentera de déterminer l'identité de l'utilisateur ayant appelé cette URL.
 Si le common ne parvient pas à identifier l'utilisateur, ce dernier sera par défaut <securityProperties.getAnonymousLogin()> dans le cas d'une URL publique,
 ou cela généra une exception dans le cas d'une url privée (Voir configuration sur la sécurité pour plus de détail).

 Le common détermine l'utilisateur appelant une URL en décryptant la valeur du token JWT préfixé par "<Bearer >" (avec l'espace) du <Header "Authorization">.

 La forme décrypté du token est représenté par la class <com.calinfo.api.common.security.JwtUser>.

 Le common apporte aussi des outils via la classe utilitaire <com.calinfo.api.common.utils.SecurityUtils> permettant de crypter ou décrypter un token.

 Dans le reste de l'application, il est possible de récupérer l'utilisateur connecté

 * Soit par injection :

+------------------------------------------+
@Autowired
private PrincipalManager principalManager;

...

AbstractCommonPrincipal principal = principalManager.getPrincipal();
+------------------------------------------+

 * Soit programatiquement

+------------------------------------------+
Authentication auth = SecurityContextHolder.getContext().getAuthentication();
AbstractCommonPrincipal principal = (AbstractCommonPrincipal)auth.getPrincipal();
+------------------------------------------+

 []

Configuration

 La configuration de la sécurité se fait dans le fichier <yaml> dans la sous config <common.configuration.security>.
 Toutes les propriétés de cette sous config sont décritent dans la JavaDoc de la classe <com.calinfo.api.common.security.SecurityProperties>
